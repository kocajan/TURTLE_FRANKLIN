# co je potreba?? pozice x a y podle odometrie, to vemem z move
# spocitat error vuci ceste na konkretnim y
# tento error x ka z odometrie a xka z cesty narveme feedackem do regulatoru


#odometrie je v metrech
# odometrie je + dopredu a - dozadu

# ten error budeme cpat jen do rotace??
# prvni zkusime jednpoduchy P regulator. Error x od x odometrie get_odometry[1], ten nacpeme nejak znasobeny do rotace?

import sys
import numpy as np
import math
import yaml
from rospy import Rate

import numpy as np

class regulated_move:
    def __init__(self, rob):
        self.robot = rob
        self.rate = Rate(10)

    def odometry_hard_reset(self):
        """
        Hard reset the robot's odometry.
        """
        self.robot.reset_odometry()
        self.robot.wait_for_odometry()
        self.robot.reset_odometry()


    def calculate_distance(self, pt1, pt2):
        return np.linalg.norm(np.array(pt2) - np.array(pt1))

    def substract_offset(self, path, x_offset):
        new_path = list()
        for item in path:
            new_path.append( (item[0]-x_offset, item[1]) )
        return new_path

    def go(self, path):
        P = 2
        I = 0.05
        sum = 0
        x_offset = 250
        path = self.substract_offset(path, x_offset)
        setpoint_idx = 10
        # neccessary shit for robot to rotate in wanted direction (3 hrs of work:))
        setpoint = (-path[setpoint_idx][0], path[setpoint_idx][1]) # protoze na prvnim stojime

        prev_odometry_values = [(0, 0)]

        goal = path[-1][0]

        self.odometry_hard_reset()

        while not self.robot.is_shutting_down() and not self.robot.get_stop():

            odometry_cm = self.robot.get_odometry()[:2]*100 # take actual odometry in cm [x,y,rot]
            odometry_cm = odometry_cm[::-1]

            if len(prev_odometry_values) > 100:
                prev_odometry_values.pop(0)

            error = self.calculate_error(setpoint, odometry_cm, prev_odometry_values)
            #print("Error: ", np.rad2deg(error))

            prev_odometry_values.append(odometry_cm)

            # anti windup

            if abs(sum) > 20:
                sum = 0
            else:
                sum = error + sum

<<<<<<< HEAD
            if self.calculate_distance(odometry_cm, setpoint) < 5:
                setpoint_idx += 5
                setpoint = path[setpoint_idx]
            print(setpoint)
            print(setpoint[0]+250,setpoint[1])

            self.robot.cmd_velocity(linear=0.05, angular=P*error + I*sum)
=======
            if self.calculate_distance(odometry_cm, setpoint) < 10:
                if setpoint_idx + 10 >= len(path):
                    break
                setpoint_idx += 10
                setpoint = (-path[setpoint_idx][0], path[setpoint_idx][1])
            #print(setpoint)

            self.robot.cmd_velocity(linear=0.05, angular= P*error + I*sum) # speed 0.05
>>>>>>> a5f0df1797a7e1df5cfdc7c05696a1343ec399ad
            self.rate.sleep()

    def calculate_error(self, setpoint, current_odometry_value, previous_odometry_values):
        """
        Calculate the error for the robot's regulator.
        It is represented as the difference between velocity vector and the vector from the robot to the goal.
        The odometry value is in the form of (y, x).
        :param setpoint: Setpoint for the robot's regulator.
        :param current_odometry_value: Current odometry value.
        :param previous_odometry_values: List of previous odometry values.
        :return: Error for the robot's regulator. (the angle)
        """
        # Calculate the difference between the current odometry value and the previous odometry value
        # Take the n-th previous odometry value (It will represent the velocity vector)
        velocity_vector = self.calculate_difference(current_odometry_value, previous_odometry_values, n=1)
        
        #velocity_vector = [-velocity_vector[0] , velocity_vector[1]]

        # Calculate the vector from the robot to the goal.
        print("SETPOINT     ", setpoint, "      odometry     ", current_odometry_value)
        #setpoint = (-setpoint[0], setpoint[1])
        
        vector_to_goal = np.array(setpoint) - np.array(current_odometry_value)

        #print("velocity   " , velocity_vector, "        goal       "  , vector_to_goal)
        #print(vector_to_goal)
        #vector_to_goal = [-vector_to_goal[0], vector_to_goal[1]]
        #print(vector_to_goal)
        #print('set: ', setpoint)
        #print('odom: ', current_odometry_value)
        #print("velocity vector ", velocity_vector/np.linalg.norm(velocity_vector))

        # Calculate the angle between the vector from the robot to the goal and the robot's velocity vector
        # The angle is in radians
        at1 = math.atan2(vector_to_goal[1], vector_to_goal[0])
        at2 = math.atan2(velocity_vector[1], velocity_vector[0])
        #print(np.rad2deg(at1), "     " ,np.rad2deg(at2))

        if at1 < 0:
            at1 = 2*np.pi+at1
        if at2 < 0:
            at2 = 2*np.pi+at2

        angle = at2-at1
        #print('ANGLE: ', np.rad2deg(angle))

        return angle

    @staticmethod
    def calculate_difference(current_odometry_value, previous_odometry_values, n=1):
        """
        Calculate the difference between the current odometry value and the previous odometry value.
        Take the n-th previous odometry value.
        The odometry value is in the form of (y, x).
        :param current_odometry_value: Current odometry value.
        :param previous_odometry_values: List of previous odometry values.
        :param n: Take the n-th previous odometry value.
        :return: Difference between the current odometry value and the previous odometry value.
        """
        return current_odometry_value - previous_odometry_values[-n]

if __name__ == '__main__':

    from robot import Robot
    path = [(250, 0), (251, 1), (252, 2), (253, 3), (254, 4), (255, 5), (256, 6), (257, 7), (258, 8), (259, 9), (260, 10), (261, 11), (262, 12), (263, 13), (264, 14), (265, 15), (266, 16), (267, 17), (268, 18), (269, 19), (269, 20), (269, 21), (269, 22), (269, 23), (269, 24), (269, 25), (269, 26), (269, 27), (269, 28), (269, 29), (269, 30), (269, 31), (269, 32), (269, 33), (269, 34), (269, 35), (269, 36), (269, 37), (269, 38), (270, 39), (271, 40), (272, 41), (273, 42), (274, 43), (275, 44), (276, 45), (277, 46), (278, 47), (279, 48), (279, 49), (279, 50), (279, 51), (279, 52), (279, 53), (279, 54), (279, 55), (279, 56), (279, 57), (279, 58), (279, 59), (279, 60), (279, 61), (279, 62), (279, 63), (279, 64), (279, 65), (278, 66), (277, 67), (276, 68), (275, 69), (274, 70), (273, 71), (272, 72), (271, 73), (270, 74), (269, 75), (269, 76), (269, 77), (269, 78), (269, 79), (269, 80), (269, 81), (269, 82), (269, 83), (269, 84), (269, 85), (269, 86), (269, 87), (269, 88), (269, 89), (269, 90), (269, 91), (269, 92), (269, 93), (269, 94), (269, 95), (269, 96), (269, 97), (269, 98), (269, 99), (269, 100), (269, 101), (269, 102), (269, 103), (269, 104), (269, 105), (269, 106), (269, 107), (269, 108)]
    #path = [(269, 75), (269, 76), (269, 77), (269, 78), (269, 79), (269, 80), (269, 81), (269, 82), (269, 83), (269, 84), (269, 85), (269, 86), (269, 87), (269, 88), (269, 89), (269, 90), (269, 91), (269, 92), (269, 93), (269, 94), (269, 95), (269, 96), (269, 97), (269, 98), (269, 99), (269, 100), (269, 101), (269, 102), (269, 103), (269, 104), (269, 105), (269, 106), (269, 107), (269, 108)]
    #path = [(269, 0), (269, 1), (269, 2), (269, 3), (269, 4), (269, 5), (269, 6), (269, 7), (269, 8), (269, 9), (269, 10), (269, 11), (269, 12), (269, 13), (269, 14), (269, 15), (269, 16), (269, 17), (269, 18), (269, 19), (269, 20), (269, 21), (269, 22), (269, 23), (269, 24), (269, 25), (269, 26), (269, 27), (269, 28), (269, 29), (269, 30), (269, 31), (269, 32), (269, 33), (269, 34), (269, 35), (269, 36), (269, 37), (269, 38), (269, 39), (269, 40), (269, 41), (269, 42), (269, 43), (269, 44), (269, 45), (269, 46), (269, 47), (269, 48), (269, 49), (269, 50), (269, 51), (269, 52), (269, 53), (269, 54), (269, 55), (269, 56), (269, 57), (269, 58), (269, 59), (269, 60), (269, 61), (269, 62), (269, 63), (269, 64), (269, 65), (269, 66), (269, 67), (269, 68), (269, 69), (269, 70), (269, 71), (269, 72), (269, 73), (269, 74), (269, 75), (269, 76), (269, 77), (269, 78), (269, 79), (269, 80), (269, 81), (269, 82), (269, 83), (269, 84), (269, 85), (269, 86), (269, 87), (269, 88), (269, 89), (269, 90), (269, 91), (269, 92), (269, 93), (269, 94), (269, 95), (269, 96), (269, 97), (269, 98), (269, 99), (269, 100), (269, 101), (269, 102), (269, 103), (269, 104), (269, 105), (269, 106), (269, 107), (269, 108), (269, 109), (269, 110), (269, 111), (269, 112), (269, 113), (269, 114), (269, 115), (269, 116), (269, 117), (269, 118), (269, 119), (269, 120), (269, 121), (269, 122), (269, 123), (269, 124), (269, 125), (269, 126), (269, 127), (269, 128), (269, 129), (269, 130), (269, 131), (269, 132), (269, 133), (269, 134), (269, 135), (269, 136), (269, 137), (269, 138), (269, 139), (269, 140), (269, 141), (269, 142), (269, 143), (269, 144), (269, 145), (269, 146), (269, 147), (269, 148), (269, 149), (269, 150), (269, 151), (269, 152), (269, 153), (269, 154), (269, 155), (269, 156), (269, 157), (269, 158), (269, 159), (269, 160), (269, 161), (269, 162), (269, 163), (269, 164), (269, 165), (269, 166), (269, 167), (269, 168), (269, 169), (269, 170), (269, 171), (269, 172), (269, 173), (269, 174), (269, 175), (269, 176), (269, 177), (269, 178), (269, 179), (269, 180), (269, 181), (269, 182), (269, 183), (269, 184), (269, 185), (269, 186), (269, 187), (269, 188), (269, 189), (269, 190), (269, 191), (269, 192), (269, 193), (269, 194), (269, 195), (269, 196), (269, 197), (269, 198), (269, 199), (269, 200), (269, 201), (269, 202), (269, 203), (269, 204), (269, 205), (269, 206), (269, 207), (269, 208), (269, 209), (269, 210), (269, 211), (269, 212), (269, 213), (269, 214), (269, 215), (269, 216), (269, 217), (269, 218), (269, 219), (269, 220), (269, 221), (269, 222), (269, 223), (269, 224), (269, 225), (269, 226), (269, 227), (269, 228), (269, 229), (269, 230), (269, 231), (269, 232), (269, 233), (269, 234), (269, 235), (269, 236), (269, 237), (269, 238), (269, 239), (269, 240), (269, 241), (269, 242), (269, 243), (269, 244), (269, 245), (269, 246), (269, 247), (269, 248), (269, 249), (269, 250), (269, 251), (269, 252), (269, 253), (269, 254), (269, 255), (269, 256), (269, 257), (269, 258), (269, 259), (269, 260), (269, 261), (269, 262), (269, 263), (269, 264), (269, 265), (269, 266), (269, 267), (269, 268), (269, 269), (269, 270), (269, 271), (269, 272), (269, 273), (269, 274), (269, 275), (269, 276), (269, 277), (269, 278), (269, 279), (269, 280), (269, 281), (269, 282), (269, 283), (269, 284), (269, 285), (269, 286), (269, 287), (269, 288), (269, 289), (269, 290), (269, 291), (269, 292), (269, 293), (269, 294), (269, 295), (269, 296), (269, 297), (269, 298), (269, 299)]
<<<<<<< HEAD
    
    path = [(250, 0), (250, 1), (250, 2), (250, 3), (250, 4), (250, 5), (250, 6), (250, 7), (250, 8), (250, 9), (250, 10), (250, 11), (250, 12), (250, 13), (250, 14), (250, 15), (250, 16), (250, 17), (250, 18), (250, 19), (250, 20), (250, 21), (250, 22), (250, 23), (250, 24), (250, 25), (250, 26), (250, 27), (250, 28), (250, 29), (250, 30), (250, 31), (250, 32), (250, 33), (250, 34), (250, 35), (250, 36), (250, 37), (250, 38), (250, 39), (250, 40), (250, 41), (250, 42), (250, 43), (250, 44), (250, 45), (250, 46), (250, 47), (250, 48), (250, 49), (250, 50), (250, 51), (250, 52), (250, 53), (250, 54), (250, 55), (250, 56), (250, 57), (250, 58), (250, 59), (250, 60), (250, 61), (250, 62), (250, 63), (250, 64), (250, 65), (250, 66), (250, 67), (250, 68), (250, 69), (250, 70), (250, 71), (250, 72), (250, 73), (250, 74), (250, 75), (250, 76), (250, 77), (250, 78), (250, 79), (250, 80), (250, 81), (250, 82), (250, 83), (250, 84), (250, 85), (250, 86), (250, 87), (250, 88), (250, 89), (250, 90), (250, 91), (250, 92), (250, 93), (250, 94), (250, 95), (250, 96), (250, 97), (250, 98), (250, 99), (250, 100), (250, 101), (250, 102), (250, 103), (250, 104), (250, 105), (250, 106), (250, 107), (250, 108), (250, 109), (250, 110), (250, 111), (250, 112), (250, 113), (250, 114), (250, 115), (250, 116), (250, 117), (250, 118), (250, 119), (250, 120), (250, 121), (250, 122), (250, 123), (250, 124), (250, 125), (250, 126), (250, 127), (250, 128), (250, 129), (250, 130), (250, 131), (250, 132), (250, 133), (250, 134), (250, 135), (250, 136), (250, 137), (250, 138), (250, 139), (250, 140), (250, 141), (250, 142), (250, 143), (250, 144), (250, 145), (250, 146), (250, 147), (250, 148), (250, 149), (400, 149), (401, 149), (402, 149), (403, 149), (404, 149), (405, 149), (406, 149), (407, 149), (408, 149), (409, 149), (410, 149), (411, 149), (412, 149), (413, 149), (414, 149), (415, 149), (416, 149), (417, 149), (418, 149), (419, 149), (420, 149), (421, 149), (422, 149), (423, 149), (424, 149), (425, 149), (426, 149), (427, 149), (428, 149), (429, 149), (430, 149), (431, 149), (432, 149), (433, 149), (434, 149), (435, 149), (436, 149), (437, 149), (438, 149), (439, 149), (440, 149), (441, 149), (442, 149), (443, 149), (444, 149), (445, 149), (446, 149), (447, 149), (448, 149), (449, 149), (450, 149), (451, 149), (452, 149), (453, 149), (454, 149), (455, 149), (456, 149), (457, 149), (458, 149), (459, 149), (460, 149), (461, 149), (462, 149), (463, 149), (464, 149), (465, 149), (466, 149), (467, 149), (468, 149), (469, 149), (470, 149), (471, 149), (472, 149), (473, 149), (474, 149), (475, 149), (476, 149), (477, 149), (478, 149), (479, 149), (480, 149), (481, 149), (482, 149), (483, 149), (484, 149), (485, 149), (486, 149), (487, 149), (488, 149), (489, 149), (490, 149), (491, 149), (492, 149), (493, 149), (494, 149), (495, 149), (496, 149), (497, 149), (498, 149), (499, 149), (500, 149), (501, 149), (502, 149), (503, 149), (504, 149), (505, 149), (506, 149), (507, 149), (508, 149), (509, 149), (510, 149), (511, 149), (512, 149), (513, 149), (514, 149), (515, 149), (516, 149), (517, 149), (518, 149), (519, 149), (520, 149), (521, 149), (522, 149), (523, 149), (524, 149), (525, 149), (526, 149), (527, 149), (528, 149), (529, 149), (530, 149), (531, 149), (532, 149), (533, 149), (534, 149), (535, 149), (536, 149), (537, 149), (538, 149), (539, 149), (540, 149), (541, 149), (542, 149), (543, 149), (544, 149), (545, 149), (546, 149), (547, 149), (548, 149), (549, 149)]
   #---objizdeni ctverce
    path = [(250, 0), (250, 1), (250, 2), (250, 3), (250, 4), (250, 5), (250, 6), (250, 7), (250, 8), (250, 9), (250, 10), (250, 11), (250, 12), (250, 13), (250, 14), (250, 15), (250, 16), (250, 17), (250, 18), (250, 19), (250, 20), (250, 21), (250, 22), (250, 23), (250, 24), (250, 25), (250, 26), (250, 27), (250, 28), (250, 29), (250, 30), (250, 31), (250, 32), (250, 33), (250, 34), (250, 35), (250, 36), (250, 37), (250, 38), (250, 39), (250, 40), (250, 41), (250, 42), (250, 43), (250, 44), (250, 45), (250, 46), (250, 47), (250, 48), (250, 49), (250, 50), (250, 51), (250, 52), (250, 53), (250, 54), (250, 55), (250, 56), (250, 57), (250, 58), (250, 59), (250, 60), (250, 61), (250, 62), (250, 63), (250, 64), (250, 65), (250, 66), (250, 67), (250, 68), (250, 69), (250, 70), (250, 71), (250, 72), (250, 73), (250, 74), (250, 75), (250, 76), (250, 77), (250, 78), (250, 79), (250, 80), (250, 81), (250, 82), (250, 83), (250, 84), (250, 85), (250, 86), (250, 87), (250, 88), (250, 89), (250, 90), (250, 91), (250, 92), (250, 93), (250, 94), (250, 95), (250, 96), (250, 97), (250, 98), (250, 99), (250, 100), (251, 100), (252, 100), (253, 100), (254, 100), (255, 100), (256, 100), (257, 100), (258, 100), (259, 100), (260, 100), (261, 100), (262, 100), (263, 100), (264, 100), (265, 100), (266, 100), (267, 100), (268, 100), (269, 100), (270, 100), (271, 100), (272, 100), (273, 100), (274, 100), (275, 100), (276, 100), (277, 100), (278, 100), (279, 100), (280, 100), (281, 100), (282, 100), (283, 100), (284, 100), (285, 100), (286, 100), (287, 100), (288, 100), (289, 100), (290, 100), (291, 100), (292, 100), (293, 100), (294, 100), (295, 100), (296, 100), (297, 100), (298, 100), (299, 100), (300, 100), (301, 100), (302, 100), (303, 100), (304, 100), (305, 100), (306, 100), (307, 100), (308, 100), (309, 100), (310, 100), (311, 100), (312, 100), (313, 100), (314, 100), (315, 100), (316, 100), (317, 100), (318, 100), (319, 100), (320, 100), (321, 100), (322, 100), (323, 100), (324, 100), (325, 100), (326, 100), (327, 100), (328, 100), (329, 100), (330, 100), (331, 100), (332, 100), (333, 100), (334, 100), (335, 100), (336, 100), (337, 100), (338, 100), (339, 100), (340, 100), (341, 100), (342, 100), (343, 100), (344, 100), (345, 100), (346, 100), (347, 100), (348, 100), (349, 100), (350, 100), (350, 101), (350, 102), (350, 103), (350, 104), (350, 105), (350, 106), (350, 107), (350, 108), (350, 109), (350, 110), (350, 111), (350, 112), (350, 113), (350, 114), (350, 115), (350, 116), (350, 117), (350, 118), (350, 119), (350, 120), (350, 121), (350, 122), (350, 123), (350, 124), (350, 125), (350, 126), (350, 127), (350, 128), (350, 129), (350, 130), (350, 131), (350, 132), (350, 133), (350, 134), (350, 135), (350, 136), (350, 137), (350, 138), (350, 139), (350, 140), (350, 141), (350, 142), (350, 143), (350, 144), (350, 145), (350, 146), (350, 147), (350, 148), (350, 149), (350, 150), (350, 151), (350, 152), (350, 153), (350, 154), (350, 155), (350, 156), (350, 157), (350, 158), (350, 159), (350, 160), (350, 161), (350, 162), (350, 163), (350, 164), (350, 165), (350, 166), (350, 167), (350, 168), (350, 169), (350, 170), (350, 171), (350, 172), (350, 173), (350, 174), (350, 175), (350, 176), (350, 177), (350, 178), (350, 179), (350, 180), (350, 181), (350, 182), (350, 183), (350, 184), (350, 185), (350, 186), (350, 187), (350, 188), (350, 189), (350, 190), (350, 191), (350, 192), (350, 193), (350, 194), (350, 195), (350, 196), (350, 197), (350, 198), (350, 199), (350, 200), (349, 200), (348, 200), (347, 200), (346, 200), (345, 200), (344, 200), (343, 200), (342, 200), (341, 200), (340, 200), (339, 200), (338, 200), (337, 200), (336, 200), (335, 200), (334, 200), (333, 200), (332, 200), (331, 200), (330, 200), (329, 200), (328, 200), (327, 200), (326, 200), (325, 200), (324, 200), (323, 200), (322, 200), (321, 200), (320, 200), (319, 200), (318, 200), (317, 200), (316, 200), (315, 200), (314, 200), (313, 200), (312, 200), (311, 200), (310, 200), (309, 200), (308, 200), (307, 200), (306, 200), (305, 200), (304, 200), (303, 200), (302, 200), (301, 200), (300, 200), (299, 200), (298, 200), (297, 200), (296, 200), (295, 200), (294, 200), (293, 200), (292, 200), (291, 200), (290, 200), (289, 200), (288, 200), (287, 200), (286, 200), (285, 200), (284, 200), (283, 200), (282, 200), (281, 200), (280, 200), (279, 200), (278, 200), (277, 200), (276, 200), (275, 200), (274, 200), (273, 200), (272, 200), (271, 200), (270, 200), (269, 200), (268, 200), (267, 200), (266, 200), (265, 200), (264, 200), (263, 200), (262, 200), (261, 200), (260, 200), (259, 200), (258, 200), (257, 200), (256, 200), (255, 200), (254, 200), (253, 200), (252, 200), (251, 200), (250, 200), (250, 201), (250, 202), (250, 203), (250, 204), (250, 205), (250, 206), (250, 207), (250, 208), (250, 209), (250, 210), (250, 211), (250, 212), (250, 213), (250, 214), (250, 215), (250, 216), (250, 217), (250, 218), (250, 219), (250, 220), (250, 221), (250, 222), (250, 223), (250, 224), (250, 225), (250, 226), (250, 227), (250, 228), (250, 229), (250, 230), (250, 231), (250, 232), (250, 233), (250, 234), (250, 235), (250, 236), (250, 237), (250, 238), (250, 239), (250, 240), (250, 241), (250, 242), (250, 243), (250, 244), (250, 245), (250, 246), (250, 247), (250, 248), (250, 249), (250, 250), (250, 251), (250, 252), (250, 253), (250, 254), (250, 255), (250, 256), (250, 257), (250, 258), (250, 259), (250, 260), (250, 261), (250, 262), (250, 263), (250, 264), (250, 265), (250, 266), (250, 267), (250, 268), (250, 269), (250, 270), (250, 271), (250, 272), (250, 273), (250, 274), (250, 275), (250, 276), (250, 277), (250, 278), (250, 279), (250, 280), (250, 281), (250, 282), (250, 283), (250, 284), (250, 285), (250, 286), (250, 287), (250, 288), (250, 289), (250, 290), (250, 291), (250, 292), (250, 293), (250, 294), (250, 295), (250, 296), (250, 297), (250, 298), (250, 299)]
    #---objizdeni kosoctverce
    #path =[(250, 0), (250, 1), (250, 2), (250, 3), (250, 4), (250, 5), (250, 6), (250, 7), (250, 8), (250, 9), (250, 10), (250, 11), (250, 12), (250, 13), (250, 14), (250, 15), (250, 16), (250, 17), (250, 18), (250, 19), (250, 20), (250, 21), (250, 22), (250, 23), (250, 24), (250, 25), (250, 26), (250, 27), (250, 28), (250, 29), (250, 30), (250, 31), (250, 32), (250, 33), (250, 34), (250, 35), (250, 36), (250, 37), (250, 38), (250, 39), (250, 40), (250, 41), (250, 42), (250, 43), (250, 44), (250, 45), (250, 46), (250, 47), (250, 48), (250, 49), (250, 50), (250, 51), (250, 52), (250, 53), (250, 54), (250, 55), (250, 56), (250, 57), (250, 58), (250, 59), (250, 60), (250, 61), (250, 62), (250, 63), (250, 64), (250, 65), (250, 66), (250, 67), (250, 68), (250, 69), (250, 70), (250, 71), (250, 72), (250, 73), (250, 74), (250, 75), (250, 76), (250, 77), (250, 78), (250, 79), (250, 80), (250, 81), (250, 82), (250, 83), (250, 84), (250, 85), (250, 86), (250, 87), (250, 88), (250, 89), (250, 90), (250, 91), (250, 92), (250, 93), (250, 94), (250, 95), (250, 96), (250, 97), (250, 98), (250, 99), (250, 100), (251, 101), (252, 102), (253, 103), (254, 104), (255, 105), (256, 106), (257, 107), (258, 108), (259, 109), (260, 110), (261, 111), (262, 112), (263, 113), (264, 114), (265, 115), (266, 116), (267, 117), (268, 118), (269, 119), (270, 120), (271, 121), (272, 122), (273, 123), (274, 124), (275, 125), (276, 126), (277, 127), (278, 128), (279, 129), (280, 130), (281, 131), (282, 132), (283, 133), (284, 134), (285, 135), (286, 136), (287, 137), (288, 138), (289, 139), (290, 140), (291, 141), (292, 142), (293, 143), (294, 144), (295, 145), (296, 146), (297, 147), (298, 148), (299, 149), (300, 150), (301, 151), (302, 152), (303, 153), (304, 154), (305, 155), (306, 156), (307, 157), (308, 158), (309, 159), (310, 160), (311, 161), (312, 162), (313, 163), (314, 164), (315, 165), (316, 166), (317, 167), (318, 168), (319, 169), (320, 170), (321, 171), (322, 172), (323, 173), (324, 174), (325, 175), (326, 176), (327, 177), (328, 178), (329, 179), (330, 180), (331, 181), (332, 182), (333, 183), (334, 184), (335, 185), (336, 186), (337, 187), (338, 188), (339, 189), (340, 190), (341, 191), (342, 192), (343, 193), (344, 194), (345, 195), (346, 196), (347, 197), (348, 198), (349, 199), (350, 200), (350, 201), (350, 202), (350, 203), (350, 204), (350, 205), (350, 206), (350, 207), (350, 208), (350, 209), (350, 210), (350, 211), (350, 212), (350, 213), (350, 214), (350, 215), (350, 216), (350, 217), (350, 218), (350, 219), (350, 220), (350, 221), (350, 222), (350, 223), (350, 224), (350, 225), (350, 226), (350, 227), (350, 228), (350, 229), (350, 230), (350, 231), (350, 232), (350, 233), (350, 234), (350, 235), (350, 236), (350, 237), (350, 238), (350, 239), (350, 240), (350, 241), (350, 242), (350, 243), (350, 244), (350, 245), (350, 246), (350, 247), (350, 248), (350, 249), (350, 250), (350, 251), (350, 252), (350, 253), (350, 254), (350, 255), (350, 256), (350, 257), (350, 258), (350, 259), (350, 260), (350, 261), (350, 262), (350, 263), (350, 264), (350, 265), (350, 266), (350, 267), (350, 268), (350, 269), (350, 270), (350, 271), (350, 272), (350, 273), (350, 274), (350, 275), (350, 276), (350, 277), (350, 278), (350, 279), (350, 280), (350, 281), (350, 282), (350, 283), (350, 284), (350, 285), (350, 286), (350, 287), (350, 288), (350, 289), (350, 290), (350, 291), (350, 292), (350, 293), (350, 294), (350, 295), (350, 296), (350, 297), (350, 298), (350, 299), (350, 300), (349, 299), (348, 298), (347, 297), (346, 296), (345, 295), (344, 294), (343, 293), (342, 292), (341, 291), (340, 290), (339, 289), (338, 288), (337, 287), (336, 286), (335, 285), (334, 284), (333, 283), (332, 282), (331, 281), (330, 280), (329, 279), (328, 278), (327, 277), (326, 276), (325, 275), (324, 274), (323, 273), (322, 272), (321, 271), (320, 270), (319, 269), (318, 268), (317, 267), (316, 266), (315, 265), (314, 264), (313, 263), (312, 262), (311, 261), (310, 260), (309, 259), (308, 258), (307, 257), (306, 256), (305, 255), (304, 254), (303, 253), (302, 252), (301, 251), (300, 250), (299, 249), (298, 248), (297, 247), (296, 246), (295, 245), (294, 244), (293, 243), (292, 242), (291, 241), (290, 240), (289, 239), (288, 238), (287, 237), (286, 236), (285, 235), (284, 234), (283, 233), (282, 232), (281, 231), (280, 230), (279, 229), (278, 228), (277, 227), (276, 226), (275, 225), (274, 224), (273, 223), (272, 222), (271, 221), (270, 220), (269, 219), (268, 218), (267, 217), (266, 216), (265, 215), (264, 214), (263, 213), (262, 212), (261, 211), (260, 210), (259, 209), (258, 208), (257, 207), (256, 206), (255, 205), (254, 204), (253, 203), (252, 202), (251, 201), (250, 200), (250, 201), (250, 202), (250, 203), (250, 204), (250, 205), (250, 206), (250, 207), (250, 208), (250, 209), (250, 210), (250, 211), (250, 212), (250, 213), (250, 214), (250, 215), (250, 216), (250, 217), (250, 218), (250, 219), (250, 220), (250, 221), (250, 222), (250, 223), (250, 224), (250, 225), (250, 226), (250, 227), (250, 228), (250, 229), (250, 230), (250, 231), (250, 232), (250, 233), (250, 234), (250, 235), (250, 236), (250, 237), (250, 238), (250, 239), (250, 240), (250, 241), (250, 242), (250, 243), (250, 244), (250, 245), (250, 246), (250, 247), (250, 248), (250, 249), (250, 250), (250, 251), (250, 252), (250, 253), (250, 254), (250, 255), (250, 256), (250, 257), (250, 258), (250, 259), (250, 260), (250, 261), (250, 262), (250, 263), (250, 264), (250, 265), (250, 266), (250, 267), (250, 268), (250, 269), (250, 270), (250, 271), (250, 272), (250, 273), (250, 274), (250, 275), (250, 276), (250, 277), (250, 278), (250, 279), (250, 280), (250, 281), (250, 282), (250, 283), (250, 284), (250, 285), (250, 286), (250, 287), (250, 288), (250, 289), (250, 290), (250, 291), (250, 292), (250, 293), (250, 294), (250, 295), (250, 296), (250, 297), (250, 298), (250, 299)]
    #--objizdeni kosoctverce 10x kratsi
    path = [(250, 0), (250, 1), (250, 2), (250, 3), (250, 4), (250, 5), (250, 6), (250, 7), (250, 8), (250, 9), (250, 10), (251, 11), (252, 12), (253, 13), (254, 14), (255, 15), (256, 16), (257, 17), (258, 18), (259, 19), (260, 20), (260, 21), (260, 22), (260, 23), (260, 24), (260, 25), (260, 26), (260, 27), (260, 28), (260, 29), (260, 30), (259, 29), (258, 28), (257, 27), (256, 26), (255, 25), (254, 24), (253, 23), (252, 22), (251, 21), (250, 20), (250, 21), (250, 22), (250, 23), (250, 24), (250, 25), (250, 26), (250, 27), (250, 28), (250, 29)]
=======
    path = [(250, 0), (250, 1), (250, 2), (250, 3), (250, 4), (250, 5), (250, 6), (250, 7), (250, 8), (250, 9), (250, 10), (250, 11), (250, 12), (250, 13), (250, 14), (250, 15), (250, 16), (250, 17), (250, 18), (250, 19), (250, 20), (250, 21), (250, 22), (250, 23), (250, 24), (250, 25), (250, 26), (250, 27), (250, 28), (250, 29), (250, 30), (250, 31), (250, 32), (250, 33), (250, 34), (250, 35), (250, 36), (250, 37), (250, 38), (250, 39), (250, 40), (250, 41), (250, 42), (250, 43), (250, 44), (250, 45), (250, 46), (250, 47), (250, 48), (250, 49), (250, 50), (250, 51), (250, 52), (250, 53), (250, 54), (250, 55), (250, 56), (250, 57), (250, 58), (250, 59), (250, 60), (250, 61), (250, 62), (250, 63), (250, 64), (250, 65), (250, 66), (250, 67), (250, 68), (250, 69), (250, 70), (250, 71), (250, 72), (250, 73), (250, 74), (250, 75), (250, 76), (250, 77), (250, 78), (250, 79), (250, 80), (250, 81), (250, 82), (250, 83), (250, 84), (250, 85), (250, 86), (250, 87), (250, 88), (250, 89), (250, 90), (250, 91), (250, 92), (250, 93), (250, 94), (250, 95), (250, 96), (250, 97), (250, 98), (250, 99), (250, 100), (250, 101), (250, 102), (250, 103), (250, 104), (250, 105), (250, 106), (250, 107), (250, 108), (250, 109), (250, 110), (250, 111), (250, 112), (250, 113), (250, 114), (250, 115), (250, 116), (250, 117), (250, 118), (250, 119), (250, 120), (250, 121), (250, 122), (250, 123), (250, 124), (250, 125), (250, 126), (250, 127), (250, 128), (250, 129), (250, 130), (250, 131), (250, 132), (250, 133), (250, 134), (250, 135), (250, 136), (250, 137), (250, 138), (250, 139), (250, 140), (250, 141), (250, 142), (250, 143), (250, 144), (250, 145), (250, 146), (250, 147), (250, 148), (250, 149), (251, 149), (252, 149), (253, 149), (254, 149), (255, 149), (256, 149), (257, 149), (258, 149), (259, 149), (260, 149), (261, 149), (262, 149), (263, 149), (264, 149), (265, 149), (266, 149), (267, 149), (268, 149), (269, 149), (270, 149), (271, 149), (272, 149), (273, 149), (274, 149), (275, 149), (276, 149), (277, 149), (278, 149), (279, 149), (280, 149), (281, 149), (282, 149), (283, 149), (284, 149), (285, 149), (286, 149), (287, 149), (288, 149), (289, 149), (290, 149), (291, 149), (292, 149), (293, 149), (294, 149), (295, 149), (296, 149), (297, 149), (298, 149), (299, 149), (300, 149), (301, 149)]
    path = [(250, 0), (250, 1), (250, 2), (250, 3), (250, 4), (250, 5), (250, 6), (250, 7), (250, 8), (250, 9), (250, 10), (250, 11), (250, 12), (250, 13), (250, 14), (250, 15), (250, 16), (250, 17), (250, 18), (250, 19), (250, 20), (250, 21), (250, 22), (250, 23), (250, 24), (250, 25), (250, 26), (250, 27), (250, 28), (250, 29), (250, 30), (250, 31), (250, 32), (250, 33), (250, 34), (250, 35), (250, 36), (250, 37), (250, 38), (250, 39), (250, 40), (250, 41), (250, 42), (250, 43), (250, 44), (250, 45), (250, 46), (250, 47), (250, 48), (250, 49), (250, 50), (250, 51), (250, 52), (250, 53), (250, 54), (250, 55), (250, 56), (250, 57), (250, 58), (250, 59), (250, 60), (250, 61), (250, 62), (250, 63), (250, 64), (250, 65), (250, 66), (250, 67), (250, 68), (250, 69), (250, 70), (250, 71), (250, 72), (250, 73), (250, 74), (250, 75), (250, 76), (250, 77), (250, 78), (250, 79), (250, 80), (250, 81), (250, 82), (250, 83), (250, 84), (250, 85), (250, 86), (250, 87), (250, 88), (250, 89), (250, 90), (250, 91), (250, 92), (250, 93), (250, 94), (250, 95), (250, 96), (250, 97), (250, 98), (250, 99), (250, 100), (250, 101), (250, 102), (250, 103), (250, 104), (250, 105), (250, 106), (250, 107), (250, 108), (250, 109), (250, 110), (250, 111), (250, 112), (250, 113), (250, 114), (250, 115), (250, 116), (250, 117), (250, 118), (250, 119), (250, 120), (250, 121), (250, 122), (250, 123), (250, 124), (250, 125), (250, 126), (250, 127), (250, 128), (250, 129), (250, 130), (250, 131), (250, 132), (250, 133), (250, 134), (250, 135), (250, 136), (250, 137), (250, 138), (250, 139), (250, 140), (250, 141), (250, 142), (250, 143), (250, 144), (250, 145), (250, 146), (250, 147), (250, 148), (250, 149), (251, 149), (252, 149), (253, 149), (254, 149), (255, 149), (256, 149), (257, 149), (258, 149), (259, 149), (260, 149), (261, 149), (262, 149), (263, 149), (264, 149), (265, 149), (266, 149), (267, 149), (268, 149), (269, 149), (270, 149), (271, 149), (272, 149), (273, 149), (274, 149), (275, 149), (276, 149), (223, 149), (222, 149), (221, 149), (220, 149), (219, 149), (218, 149), (217, 149), (216, 149), (215, 149), (214, 149), (213, 149), (212, 149), (211, 149), (210, 149), (209, 149), (208, 149), (207, 149), (206, 149), (205, 149), (204, 149), (203, 149), (202, 149), (201, 149), (200, 149), (199, 149), (198, 149), (197, 149), (196, 149), (195, 149), (194, 149), (193, 149), (192, 149), (191, 149), (190, 149), (189, 149), (188, 149), (187, 149), (186, 149), (185, 149), (184, 149), (183, 149), (182, 149), (181, 149), (180, 149), (179, 149), (178, 149), (177, 149), (176, 149), (175, 149), (174, 149), (173, 149), (172, 149), (171, 149), (170, 149), (169, 149), (168, 149), (167, 149), (166, 149), (165, 149), (164, 149), (163, 149), (162, 149), (161, 149), (160, 149), (159, 149), (158, 149), (157, 149), (156, 149), (155, 149), (154, 149), (153, 149), (152, 149), (151, 149), (150, 149), (149, 149), (148, 149), (147, 149), (146, 149), (145, 149), (144, 149), (143, 149), (142, 149), (141, 149), (140, 149), (139, 149), (138, 149), (137, 149), (136, 149), (135, 149), (134, 149), (133, 149), (132, 149), (131, 149), (130, 149), (129, 149), (128, 149), (127, 149), (126, 149), (125, 149), (124, 149), (123, 149), (122, 149), (121, 149), (120, 149), (119, 149), (118, 149), (117, 149), (116, 149), (115, 149), (114, 149), (113, 149), (112, 149), (111, 149), (110, 149), (109, 149), (108, 149), (107, 149), (106, 149), (105, 149), (104, 149), (103, 149), (102, 149), (101, 149)]
    path = [(250, 0), (250, 1), (250, 2), (250, 3), (250, 4), (250, 5), (250, 6), (250, 7), (250, 8), (250, 9), (250, 10), (250, 11), (250, 12), (250, 13), (250, 14), (250, 15), (250, 16), (250, 17), (250, 18), (250, 19), (250, 20), (250, 21), (250, 22), (250, 23), (250, 24), (250, 25), (250, 26), (250, 27), (250, 28), (250, 29), (250, 30), (250, 31), (250, 32), (250, 33), (250, 34), (250, 35), (250, 36), (250, 37), (250, 38), (250, 39), (249, 39), (248, 39), (247, 39), (246, 39), (245, 39), (244, 39), (243, 39), (242, 39), (241, 39), (240, 39), (239, 39), (238, 39), (237, 39), (236, 39), (235, 39), (234, 39), (233, 39), (232, 39), (231, 39), (230, 39), (229, 39), (228, 39), (227, 39), (226, 39), (225, 39), (224, 39), (223, 39), (222, 39), (221, 39), (220, 39), (219, 39), (218, 39), (217, 39), (216, 39), (215, 39), (214, 39), (213, 39), (212, 39), (211, 39)]
    path = [(250, 0), (250, 1), (250, 2), (250, 3), (250, 4), (250, 5), (250, 6), (250, 7), (250, 8), (250, 9), (250, 10), (250, 11), (250, 12), (250, 13), (250, 14), (250, 15), (250, 16), (250, 17), (250, 18), (250, 19), (250, 20), (250, 21), (250, 22), (250, 23), (250, 24), (250, 25), (250, 26), (250, 27), (250, 28), (250, 29), (250, 30), (250, 31), (250, 32), (250, 33), (250, 34), (250, 35), (250, 36), (250, 37), (250, 38), (250, 39), (250, 39), (251, 39), (252, 39), (253, 39), (254, 39), (255, 39), (256, 39), (257, 39), (258, 39), (259, 39), (260, 39), (261, 39), (262, 39), (263, 39), (264, 39), (265, 39), (266, 39), (267, 39), (268, 39), (269, 39), (270, 39), (271, 39), (272, 39), (273, 39), (274, 39), (275, 39), (276, 39), (277, 39), (278, 39), (279, 39), (280, 39), (281, 39), (282, 39), (283, 39), (284, 39), (285, 39), (286, 39), (287, 39), (288, 39), (289, 39)]
>>>>>>> a5f0df1797a7e1df5cfdc7c05696a1343ec399ad
    detection_cfg = yaml.safe_load(open('../conf/detection.yaml', 'r'))
    objects_cfg = yaml.safe_load(open('../conf/objects.yaml', 'r'))
    robot_cfg = objects_cfg['robot']
    rob = Robot(robot_cfg['radius'], robot_cfg['height'], robot_cfg['color'])
    rob.set_world_coordinates(robot_cfg['world_coordinates'])

    tmp = regulated_move(rob)
    tmp.go(path)